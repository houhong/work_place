package xom.it.houhong.二叉树;


//泛型类
public class BST1 <E extends Comparable<E>>{
	
	private class Node{
		
		E e;
		Node left,right;

		//节点的定义
		public Node() {
			
			this.e = e;
			
		    this.left = null;
		    this.right =null;
		}
		

		
		
	}
	
	//根节点和二叉树的长度
	private  Node root;
	private  int size;
		
	//二叉树的属性的获取
	public Node getRoot() {
		return root;
	}

	public void setRoot(Node root) {
		this.root = root;
	}

	public int getSize() {
		return size;
	}

	public void setSize(int size) {
		this.size = size;
	}

	//二叉树的构造
	public BST1() {
		this.root = root;
		this.size = size;
	}
	
	//二叉树的添加方法
	public void add(Node node,E e){
		
		  //如果插入进来的节点有在树中有节点
	     if (node.equals(node.e)) {
	    	//程序结束
			return;
		}
	     else if(e.compareTo(node.e) < 0  && node.left ==null){
			
		}
	}
	

}
