package xom.it.houhong.二叉树;

import org.ietf.jgss.Oid;
/*
 * 二叉排序树
 */

public class BST<E extends Comparable<E>>{


	public Node root;
	public int size;
	public BST() {

		this.size=size;

	}

	//节点
	private class Node{

		public E e;
		public Node left,right;

		public Node() {
			this.e = e;
			this.left=null;
			this.right=null;
		}

		public Node(E e){
			this.e=e;
		}

	}



	//生成set和get方法
	public Node getRoot() {
		return root;
	}

	public void setRoot(Node root) {
		this.root = root;
	}

	public int getSize() {
		return size;
	}

	public void setSize(int size) {
		this.size = size;
	}


	//生成一颗二叉树 --递归
	public void generateBST(Node node,int depth,StringBuilder res){
		
		//输出根节点
		res.append(node.e+generateDepthString(depth)+"\n");
		//左孩子
		generateBST(node.left, depth+1, res);
		generateBST(node.right, depth, res);
		
	}
	
	//写深度
	public String generateDepthString(int depth){
		
		StringBuilder res = new StringBuilder();
		
		for (int i = 0; i < depth; i++) {
			res.append("--");
		}
		return res.toString();
	}

}
